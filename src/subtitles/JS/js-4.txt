in this video I want to continue talking

about line number three so that we

completely come to a full understanding

of what variables are in JavaScript so

I'm gonna add a new file and I'm gonna

do that by hovering over the source tab

of the Explorer and I want to type in

variables dot J s like so and then I'm

just gonna copy in the code that we had

here we use this as a starting point all

right so let's focus in on line number

one let's just first of all let's make

sure this still runs and let's go node

and this time we're gonna give it the

new file name variables and we get the

same result as before great so what is a

variable I think I said at the very end

of that previous lesson that a variable

is basically just a an area in the

computer's memory where we're storing a

value we're requesting or declaring our

need for a new variable a space in the

computer's memory where we can put

information and retrieve information and

then we can from that point on continue

to use that variable to to store

different values and retrieve those

values back out throughout the the

lifespan of the application so there are

actually several different parts to the

variable declaration statement and line

number one the first is the let keyword

and let's start start talking about the

parts of speech in JavaScript a keyword

is something like let and we'll see some

other examples little bit later but

essentially think of it like a verb in

the English language it's a it's an

instruction to the JavaScript compiler

that we want to do something that we

want to take action so we want to create

a variable with the name of X and we're

expressing that intent to JavaScript

using the let keyword all right so

that's the first part of it and then the

second part is the name of the variable

that we want so we're requesting that a

area of storage a unit of storage is

assigned to our application

where we can put things but how do we

reference that again it needs a name so

that we can get the values and put new

values in memory all right

and so that's usually called an

identifier we want to declare a new

variable with the identifier of X and

we're going to talk about meaning our

identifiers naming our variables there's

some rules and some conventions that we

need to follow as developers we'll come

back to that at the very end of this

lesson now before we get too far there's

actually a couple of different ways to

to declare a variable in JavaScript the

original keyword that you'll see used

and used in 99% of all tutorials and

articles and books and videos is the VAR

keyword and until recently this was the

only way that you could declare a

variable in the latest version of

JavaScript however the recommendation is

to abandon var unless you really need it

use the let keyword instead or the Const

keyword which we'll talk about in just a

moment if we were to save our

application using the VAR keyword in

line number one and then rerun it

nothing would change so what's the

problem with var there are some well I

guess there's there's two ways to kind

of explain it at this point the first is

that it's usage is very nuanced it does

stuff that somebody new to JavaScript

may not anticipate the ramifications of

until it's too late and there are

problems in code we'll talk about the

VAR keyword and how it relates to scope

and so on in an upcoming video but we

need to introduce some more concepts

before we can get to the point where

that discussion is even interesting okay

so it's usage is nuanced and the

ramifications can be pretty challenging

if you're just getting started so that's

why the people who decided what goes

into JavaScript said why don't we

introduce a new keyword called lead it

will work like most other programming

language

as as you try to learn JavaScript

hopefully it won't be problematic so

that's why we have the let keyword the

other the other keyword for declaring a

variable is Const and we use that

whenever we want to express our intent

to the JavaScript compiler that we do

not intend for that variable to ever

change its value so what we initialize

the value to in this case to seven we

wouldn't expect that to change

throughout the lifetime of the

application and if we try to change it

like in the very next line of code we

can attempt to set it equal to six I'll

save that let's go over and try to run

that code we're gonna get an error and

it actually is pretty helpful it gives

us a little a little caret right

underneath the equal sign and it says

assignment a constant variable that's

the problem and and the issue here is

that we've said to JavaScript we never

want to change that value and then the

very next line of code we say yeah I'm

gonna assign it a new value and set it

equal six misses can't do that okay so

for the most part we're gonna use the

let keyword most of the time because

that's the recommendation now in as we

learn JavaScript all right so just want

to point out that we can uncomment out

line number two as we assign the value

of x to different values and we can keep

doing this as many times as we want to

so at this point in line number one

we've declared the variable set it to

the seven then we've assigned the value

of six then five and four we can keep

changing the value in the computer's

memory and what is the value in line

number six

what's X's value well the last time we

assign a value to it was four so the

application now whenever we run it will

give us seven because three plus four

equals seven right so that's what we get

in line number seven great alright so I

guess this should be obvious at this

point the equal sign here is actually

what's called an assignment operator

this is how we assign a value into a

variable and we can keep assigning

values as many times as we want

but we can only declare value are

variable one time so if I were to try

and come down here and say let x equals

you know seven again or let it equal

eight I'm gonna get an error whenever I

try to run the application the

identifier X has already been declared

again you can only declare variable once

but you can assign its value as many

times as you want to after that all

right

so in line number one not only are we

declaring the variable then we're also

assigning its value right off the bat in

the same line of code and when we do

that as a technique called

initialization this is actually two

lines of code rolled up into one

lines number one and two now are roughly

equivalent to what we had before well

roughly equivalent there is one

difference here at the end of the

execution of line number one what is the

value of X well let's let's find out

console dot log and it will just say

what's the value of x at this point and

then let's run the application and you

can see that first value that's output

above what we get now in line number

eleven is the term undefined we'll

explain what undefined means in more

detail a little bit later but

essentially it is what it sounds like

we've declared a variable but we've not

defined it we've not put a value into it

so it's undefined all right and that's

generally not something we want it might

be in some cases something we need but

for the most part we won't do that it's

preferable that at the moment of

declaration you also in initialize your

variables if you can alright so that

would be valid right there

all right so now let's finish this up

and talk about the rules for naming our

variables the variable name itself I

think I've already referred to this as

an identifier and so there are rules for

identifier names and then there are some

code conventions and these are not

enforced by the JavaScript compiler but

are rather things that our best

practices as determined by the

unity of software developers who have

come before you so let's talk about

those things which are hard and fast

rules that will actually break your

application rule number one is that all

identifiers all variable names have to

begin with either a letter a dollar sign

or an underscore so that's rule number

one rule number two is that the variable

names can contain letters or numbers

dollar signs or underscores but no other

special characters and you can't use a

space in between you know two words that

you intend to be considered together as

an identifier identifiers can't have any

spaces all right and then rule number

three is that you can't use any keywords

so I can't do something like this let's

let equal to eight maybe if we try that

we're gonna get a weird error let is

disallowed as a lexical bound name all

right and so it even if we were scrolled

just a tiny bit it puts that those

carrots right underneath the let the

second one because we're trying to use

that identifier but it's already a

keyword right so you can't do that all

right so those are your own oh yeah

there's one other rule and that is that

variables variable names identifiers are

case sensitive so we could do this and

it would be a perfectly acceptable

application these are two different

variables upper case X and lower case X

so if you intend to do something like

this let's see what we get here all

right it doesn't it doesn't blow up so

we were able to use X and assign it to

eight but we didn't declare the variable

well

something fishy is going on and we'll

get to the bottom of it before the end

of this course but the key to this is

that we did not we're not working with

the same X as we're working with here

all right so let's just get rid of that

but those are the rules has to begin

with the letter a dollar sign or under

or the rest of the name can have pretty

much anything including numbers but no

spaces or other special characters can't

use any keywords for names of variables

and be aware that variable names are

case sensitive now there are code

conventions and these again are just

good practices the first one is that

variable names should be descriptive and

unfortunately x y&z are not very

descriptive names ideally we would use

something like maybe let's go down here

so let first number equal 7 and then

let's second number equals 3 and then we

could use that in line number 12 instead

here's some better ones actually like if

we wanted to capture information or

represent information like the first

name or let sikozu equals some time 0 2

and so on

alright so use names that represent the

thing you're trying to store and it from

an application perspective what meaning

does this variable have inside of our

application meaningful variable names

the second is camel casing so if you are

gonna use multiple words you should use

this format called camel casing and that

means that the first word of your

variable name should be lowercase so the

F in first is always lowercase but then

any subsequent names that we append or

words that we pen together should have a

capital letter so you can see that I

follow this convention every single time

in lines 15 through 18 lowercase Z and

zip code capital C in zip code alright

so camel casing third one is to be

consistent and that is to always follow

the same kind of naming convention and

this would be true kind of a cross not

just the names of variable names but for

every other type of identifier that we

wind up creating in our applications

stay consistent pick one style and stay

with it throughout the remainder of the

application and then the other is to not

rely on case we've already seen the

danger of that but what if I

intentionally want to do let dip code

equals six oh four five nine what we've

just done while it's grammatically

correct from JavaScript's perspective

and those are two separate variables in

line eighteen and twenty we've

introduced some subtle dissonance in the

application now it's more difficult for

me to see that these are actually two

different variables and maybe I intended

to do that but that's poor programming

practice we might choose maybe a better

name like first zip code and second zip

code that might be a better way to go

about that same sort of thing okay so

those are the code conventions and the

naming rules for variables and that's

just about everything you need to know

about variables just about there's

actually a little bit more that we need

to talk about and we'll finish up this

discussion and next in the next video

when we talk about the values that we're

actually signing into variables and

their data types and we'll talk about

that next see there thanks

