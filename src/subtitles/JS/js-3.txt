so our job as software developers is to

author code which is using a language

that's human readable and author in such

a way that can be understood and parsed

and interpreted and ultimately then

executed by a computer and the code that

we write we save into files and we ask

we ask some execution environment

whether it be a web browser or in this

case node two to take a look at this

this code that we wrote in this file and

to interpret it and to execute it all

right and so it's an important first of

all as we get started understand that

how our code is going to be used we're

working and learning the JavaScript

language but ultimately the code that we

write will be executed in let's be

honest one of two maybe even a third

environment we're either gonna write

JavaScript code that will ultimately be

executed in node and typically when

we're writing code for node based

applications we're writing applications

that would can access the file system

ask access the network respond to HTTP

requests and provide an HTTP response

things that are more server-side in

nature all right and then we'll also

then write JavaScript code that will

execute in the context of a web browser

and we would expect for that code to be

able to dynamically interact with with

elements HTML elements on a given web

page all right but we might also use

JavaScript to to write videogames in an

environment like unity for example and

be able to author and control the

various objects on screen and and their

animation and and their interaction and

so on so there's what I'm trying to get

at here is that there's a difference

between the language itself and then the

environment that

inside of and we need to be aware of

that but those are two separate things

even though sometimes they feel like one

thing in this case

console for example the console dot log

function is provided to us by node it

allows us to tell node that we want to

print something to the command line like

we did just a moment ago now there's

also a console dot log function in most

web browsers and it allows us to print

little debugging messages or console

messages that can only be viewed inside

of a web browser whenever we have the

developer tools open and we'll see how

to do that much later in this course

once we start building web pages and and

JavaScript that can interact with them

but at any rate let's get back to the

matter at hand here if I write my

JavaScript incorrectly then the run time

what whether it's node or a web browser

well won't be able to compile it and

it'll give us an error and so javascript

is similar to english in so much that

javascript has a syntax and it has a

proper syntax versus a syntax that's

incorrect so if you've ever taken an

English English class you'll know that

there are parts of speech that that

you're supposed to use punctuation at

the end of a sentence to indicate that

the end of a complete thought there are

nouns and verbs and adjectives and

adverbs and and prepositions and all

these sorts of things right and so you

know in general terms the same thing is

true with JavaScript there are parts of

speech we'll talk about those and so you

will be learning a new language starting

with your ABCs and and with with I guess

vocabulary words so to speak and then to

move on to authoring sentences that are

complete thoughts and then stringing

those sentences together into paragraphs

in order to accomplish some higher-level

tasks and even kind of arranging those

paragraphs together to create entire

applications alright so hopefully that

analogy will serve you well as we get

started here our goal as we get started

is to author

javascript statements and a statement is

basically just one complete instruction

it's like a sentence in English and each

javascript file that we create like this

app dot j s it'll it'll contain one or

more JavaScript statements that will

execute in sequential order from top to

bottom at least usually and I'll talk

about the exception to that as we get

further into this course but there are

some other similarities between

JavaScript and English for example

there's an end of line character I was

very very specific about adding that

semicolon at the end of our statement

and that just is an indication to the

compiler that this is a complete thought

and it should be carried out as is all

right now we also see that we have our

statement all on one line of code and

generally speaking as we're getting

started we're gonna write our JavaScript

statements one per line

now we'll bend those rules as some of

our statements become very long we can

actually for readability sake from a

human perspective we can split things up

onto multiple lines if we need to

JavaScript specifically note doesn't

really care about that that's really

more for human readability it can deal

with multiple lines or a single line for

a given statement but be that as it may

we're gonna try to strive at the

beginning to write one statement per

line in our files and a statement

usually consists of one or more

expressions so we'll talk about

expressions a little bit later but this

particular expression is essentially

just executing a function that's built

into node it's the log function it

belongs to an object called console

we'll talk about objects and functions a

little bit later here and we execute it

by using operators those in this

particular case this is the function

invocation operator or the method

invocation operator it's those open and

closing parentheses and we can even then

pass in what are called arguments to

those functions so you can see that each

little piece of this has a name

it has a role to play in creating our

functions and we'll learn more about

that as we move on here one thing to

note is that JavaScript is case

sensitive and this trips up a lot of

people to begin with that's why I was

very specific to say hey don't

accidentally or mindlessly use capital

letters make sure everything is

lowercase let's see what happens if I

were to save this work that I did here

with the capital C in console in the

capital L and log let's go node space

app and hit enter and we get a reference

error console is not defined it's not

defined inside of node console doesn't

exist with a capital C inside of node it

exists with a lowercase C inside of node

the same thing is true with the function

name log let's go ahead and I'll just

use the up arrow on my keyboard that'll

give me the last command that was used

in the in the terminal so again no tap

and I'm going to try to execute this

little program again and I get another

error this time console dot capital L

log is not a function that's true it's

because it's lowercase L and log and

I'll save that change and then we'll

Reax acute this and it will work now

there are some things that especially

when your application is small don't

matter so you might have accidentally

left off that semicolon at the end and

the application still runs but that's a

bad practice to rely on that you should

always try to create properly form

sentences even though you could write an

English sentence or a text message that

somebody could understand that has no

punctuation has no capital letters and

things of that nature that would make it

a well-formed English sentence and

you're you're relying on your the person

receiving that text message to

understand what you're trying to say the

computer doesn't work that way it means

it needs to know exactly what you're

saying and so you have to be precise

precision is the key as a software

developer alright so what I want to do

here as we kind of start wrapping things

up for this first first foray into

JavaScript I want to comment out this

line and add some new code below it and

use that as kind of the next step beyond

where we're at right now

so to to tell the compiler to ignore our

line of code I'm gonna add a code

comment and here I use two forward

slashes I added also a space but that

was really just for readability sake so

that myself as a human I can kind of

make an easy distinction because

sometimes all these characters run

together I like adding alt space between

this but these two characters say forget

everything out on this line of code

don't compile it don't try to use it all

right and we'll see in a moment that

there's another way to create code

comments as well but here let's create

something a little bit more interesting

I'm gonna say let X equal 7 I'm going to

say let y equal 3 but Z equal X plus y

and then we'll be console dot log and

then I'm going to use open and close

parentheses I'm gonna use a single quote

and I type in the word answer colon

space I'm gonna go outside of that quote

so it's I'm gonna go between the closing

single quote and the closing parenthesis

I'm gonna make some space for myself in

there I'm going to use the plus key or

the plus operator and the letter Z I'm

gonna go to the end of the line and use

the end of line character the semicolon

I'm gonna save it all now before we

actually execute this what do you think

this will do what do you think will be

printed to our console window do you

have any guesses I'm betting that your

background in math or algebra probably

will lead you to the correct answer and

I think that your intuition in many

cases is something that's important as

you're learning JavaScript it is human

readable it should be somewhat

understandable it might require a little

extra explanation because there's some

things that are not extremely obvious

but for the most part this shouldn't

blow you away and nothing we cover

should ever blow you away

it just might require a little extra

effort then you're normally used to

putting into things but by no means

impossible

right so just take some comfort that

this is well treble ground and that if I

can understand it I promise you can to

let's run the application see that we

get the the the correct result which is

answer : space and the number 10 so how

do we get that well we have something

here let X and even though again you're

not a JavaScript developer you know or

an advanced JavaScript developer just

yet I'm willing to bet that you

understood that we were creating a

variable essentially a bucket that could

contain a value and immediately we set

that variable equal to the value 7 and

then we did the same thing with the

value of 3 we put that into a different

variable a different bucket called Y and

then here we have an expression an

expression that will add two values

together what are the values inside of

those variables x and y well we just

assign them in lines to mean for and we

know that that probably means we're

going to add those together to get the

result of 10 and we assign that into a

new bucket a new variable named Z and

then we merely print out that literal

string but then we also say also append

the letter or the value that's in Z now

hopefully that made sense to you even

before we ran the application but you

can see here that for example the plus

symbol has has double duty it's it's

serving to be the addition operator but

it's also serving to concatenate two

values together in this case two string

values together

so that we can print it out to screen so

we're gonna use this kind of as a

starting point and talk about this at

more length in the next and subsequent

videos but hopefully up to this point

you get some comfort level your writing

some code you're getting your hands

dirty in the code and you know I know

you can do this so just keep pushing

forward and let's pick it up in the next

video we'll see you there

Thanks

